// RUN: sclang-gen --emit=mlir %s | sclang-gen -x mlir --emit=mlir | FileCheck %s

// CHECK-LABEL: scl.function @abs(%arg0: !scl.real {scl.name = "in"}) -> !scl.real
// CHECK-DAG:   %abs = scl.tmpvar "abs" : !scl.address<!scl.real>
function abs : real

var_input
 in : real;
end_var;

begin
// CHECK-DAG:  [[C0:%cst[_0-9]*]] = scl.constant 0.000000e+00 : f32 -> !scl.real
// CHECK-DAG:  [[LT:%[0-9]+]] = scl.cmplt %arg0, [[C0]]
// CHECK:      scl.if [[LT]]
  if in < 0.0 then

// CHECK-DAG:  [[NEG:%[0-9]+]] = scl.negate %arg0
// CHECK:      scl.store %abs : !scl.address<!scl.real> = [[NEG]]
    abs := -in;

// CHECK:      scl.end
// CHECK:      [[GT:%[0-9]+]] = scl.cmpgt %arg0, [[C0]]
// CHECK:      scl.if [[GT]]
  elsif in > 0.0 then

// CHECK:      scl.store %abs : !scl.address<!scl.real> = %arg0
    abs := in;

// CHECK:      scl.end
  else

// CHECK:      scl.store %abs : !scl.address<!scl.real> = [[C0]]
    abs := 0.0;

// CHECK:      scl.end
  end_if;

// CHECK:      scl.return.value %abs : !scl.address<!scl.real>
end_function
