// RUN: sclang --emit=ast %s 2>&1 | FileCheck %s

// CHECK: Function abc
function abc : int

var
// CHECK: DeclarationSection
// CHECK:   VariableSubsection

 a : INT := -1;
// CHECK: VariableDeclaration
// CHECK:   VariableIdentifier `a`
// CHECK:   ElementaryDataType Int
// CHECK:   DataTypeInit
// CHECK:     IntegerConstant -1

 b : INT := -2;
// CHECK: VariableDeclaration
// CHECK:   VariableIdentifier `b`
// CHECK:   ElementaryDataType Int
// CHECK:   DataTypeInit
// CHECK:     IntegerConstant -2

 c : REAL := 10.1;
// CHECK: VariableDeclaration
// CHECK:   VariableIdentifier `c`
// CHECK:   ElementaryDataType Real
// CHECK:   DataTypeInit
// CHECK:     RealConstant 1.010000e+01
end_var;

var_input
// CHECK: ParameterSubsection Input
 p : struct
  x : INT := 1;
  y : INT;
 end_struct;
// CHECK: VariableDeclaration
// CHECK:   VariableIdentifier `p`
// CHECK:   StructDataTypeSpec
// CHECK:     ComponentDeclaration 'x'
// CHECK:       ElementaryDataType Int
// CHECK:       DataTypeInit
// CHECK:         IntegerConstant 1
// CHECK:     ComponentDeclaration 'y'
// CHECK:       ElementaryDataType Int
end_var;

var_output
// CHECK: ParameterSubsection Output
 s : array [1..2] of int;
// CHECK: VariableDeclaration
// CHECK:   VariableIdentifier `s`
// CHECK:   ArrayDataTypeSpec [1..2]
// CHECK:     ElementaryDataType Int

end_var;

begin
// CHECK: CodeSection
  if a < b then
// CHECK: IfThenElse
// CHECK:   IfThen
// CHECK:     BinaryExpression 60
// CHECK:       SimpleVariable a
// CHECK:       SimpleVariable b
// CHECK:     CodeSection

    a := b * 5;
// CHECK: ValueAssignment
// CHECK:   BinaryExpression -88
// CHECK:     SimpleVariable a
// CHECK:     BinaryExpression 42
// CHECK:       SimpleVariable b
// CHECK:       IntegerConstant 5

  elsif a > b then
// CHECK: IfThen
// CHECK:   BinaryExpression 62
// CHECK:     SimpleVariable a
// CHECK:     SimpleVariable b
// CHECK:   CodeSection

    a := b * 3;
// CHECK: ValueAssignment
// CHECK:   BinaryExpression -88
// CHECK:     SimpleVariable a
// CHECK:     BinaryExpression 42
// CHECK:       SimpleVariable b
// CHECK:       IntegerConstant 3

  else
// CHECK: Else
// CHECK:   CodeSection

    b := 2 + 3 * a;
// CHECK: ValueAssignment
// CHECK:   BinaryExpression -88
// CHECK:     SimpleVariable b
// CHECK:     BinaryExpression 43
// CHECK:       IntegerConstant 2
// CHECK:       BinaryExpression 42
// CHECK:         IntegerConstant 3
// CHECK:         SimpleVariable a
  end_if;

  return;
// CHECK: Return
end_function
