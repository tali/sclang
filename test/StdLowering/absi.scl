// RUN: sclang --emit=mlir-std %s | FileCheck %s

// CHECK:      func @abs(%arg0: i16) -> i16
function abs : int

var_input
 in : int;
end_var;

begin

// CHECK: [[C0:%[_a-z0-9]+]] = constant 0 : i16
// CHECK: [[ABS:%[0-9]+]] = alloca() : memref<i16>
// CHECK: [[LT:%[0-9]+]] = cmpi "slt", %arg0, [[C0]]
// CHECK: loop.if [[LT]] {
  if in < 0 then

// CHECK:   [[NEG:%[0-9]+]] = subi [[C0]], %arg0 : i16
// CHECK:   store [[NEG]], [[ABS]][] : memref<i16>
    abs := -in;

// CHECK: } else {
// CHECK:   [[GT:%[0-9]+]] = cmpi "sgt", %arg0, [[C0]]
// CHECK:   loop.if [[GT]] {
  elsif in > 0 then

// CHECK:     store %arg0, [[ABS]][] : memref<i16>
    abs := in;

// CHECK:   } else {
  else

// CHECK: store [[C0]], [[ABS]][] : memref<i16>
    abs := 0;

// CHECK:   }
// CHECK: }
  end_if;

// CHECK: [[RET:%[0-9]+]] = load [[ABS]][] : memref<i16>
// CHECK: return [[RET]]
end_function
